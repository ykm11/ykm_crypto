from Crypto.Util.number import getStrongPrime
from Crypto.Util.number import long_to_bytes, bytes_to_long

def gen_key():
    p = getStrongPrime(1024)
    q = getStrongPrime(1024)
    phi = (p-1)*(q-1)
    n = p * q
    return n, phi

e = 65537
n, phi= gen_key()

print("[+] PubKey n :", n)
print("[+] Phi(n) :", phi)

# [+] PubKey n : 28367064354952585964014469499961783954365036494055662957488534511196466480268464349222696646951897939709314796783587830492577516774172786297271801971063571655192292546475128066505918311326917410758178420325307561423487324313267948075027253366941574087975785605756517223613525499657490044600544746505931494747694724043412012709823072521767676172964813072329468727781834388083973671581729770306082740716534048838533140135973235433941191212884677874567005505051684204493418751027104478469744878246770061123308859556883450598236485910873376803033279860741913601070693153298781598252327354712400320738977742684770654173973
# [+] Phi(n) : 28367064354952585964014469499961783954365036494055662957488534511196466480268464349222696646951897939709314796783587830492577516774172786297271801971063571655192292546475128066505918311326917410758178420325307561423487324313267948075027253366941574087975785605756517223613525499657490044600544746505931494747357731634770210766998333526450831894923517163877002815259316525600736541931450626574303806356368947077109328533505068371926220208327516879677559134140459785136009398114896893163814754999833643563175998864809165766448612875922259901898875698822508338910421294982326883318536494496811175557810300160274007180288

# flag is FLAG{SHA256(hex(p ^ q))}
#
# import hashlib
# print(hashlib.sha256(hex(p^q).encode()).digest().hex()) 
